apply plugin: 'antlr'

dependencies {
    api(group: 'org.antlr', name: 'antlr-runtime', version: project.property('antlr3Version')) {
        exclude(module: 'stringtemplate')
    }
    api project(':d2j-external')
    // api group: 'org.ow2.asm', name: 'asm', version: project.property('asmVersion') // Fixed MethodCodeTooLargeException
    api(group: 'org.ow2.asm', name: 'asm-tree', version: project.property('asmVersion')) {
        exclude(module: 'asm')
    }
    api(group: 'org.ow2.asm', name: 'asm-util', version: project.property('asmVersion')) {
        exclude(module: 'asm')
    }
    api project(':d2j-base-cmd')
    antlr "org.antlr:antlr:${project.property('antlr3Version')}"
}

sourceSets.main.antlr.srcDirs = ['src/main/antlr3']

// From https://github.com/gradle/gradle/issues/19555#issuecomment-1593252653
sourceSets.configureEach {
    var generateGrammarSource = tasks.named(getTaskName("generate", "GrammarSource"))
    java.srcDir(generateGrammarSource.map { files() })
}
